syntax = "proto3";

package messages;

import "google/protobuf/timestamp.proto";

/*
The file defines messages that any Server can receive
from another machine (inclusive of clients and ordering)

Each machine will talk to each other by using a socket
based network connection. We will serialize these 
messages and send them on this wire. 
*/

message Server {
	string sender_name = 1;			// Server name of sender
	int32 sender_replica_id = 2;	// Server ID of sender
  	int32 sender_shard_id = 3;		// Sender's shard ID
  	int32 client_id = 4;			// Client ID
  	int32 client_seq_num = 5;		// Client generated record sequence num
  	string record = 6;				// Entry to log
  	int32 global_sequence_number =  7;	// Utilized in subscribe and trim.
  	repeated int32 cut = 8;			// Received from ordering, this is a global cut vector
  	int32 global_ordering_threshold = 9;	

	enum RequestType {
		APPEND = 0;	// Sent from a client, add this to log
		REPLICATE = 1;	// Sent from a server, duplicate this obj. We want to carry over the csn and the cid to avoid duplicates
		COMMIT = 2;	// Sent from ordering
		SUBSCRIBE = 3;	// Sent from client
		TRIM = 4;	// Sent from client. Ignore implementation for now
	}

	RequestType request_type = 9;

	google.protobuf.Timestamp last_updated = 10;
}