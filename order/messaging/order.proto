syntax = "proto3";

package messaging;

/*
gRPC for Order layer of Scalog
*/
service Order {
    rpc Report(stream ReportRequest) returns (stream ReportResponse) {}

    rpc Register(RegisterRequest) returns (RegisterResponse) {}

    rpc Finalize(FinalizeRequest) returns (FinalizeResponse) {}
}

message ReportRequest {
    int32 shardID = 1;
    int32 replicaID = 2;
    repeated int32 tentativeCut = 3;
    // True only if the ordering layer wishes to propose a finalization of this particular shard
    bool finalized = 4;
}

message ReportResponse {
    // Gsn to start counting off of for the 0th server
	int32 startGlobalSequenceNum = 1;
	// Offsets of the newly ordered records
	repeated int32 offsets = 2;
	// Should be in order of the server ID
    repeated int32 committedCuts = 3;
    // True only if the ordering layer is finalizing this data replica
    bool finalized = 4;
}

message RegisterRequest {
    int32 shardID = 1;
    int32 replicaID = 2;
}

message RegisterResponse {}

message FinalizeRequest {
    // Array of shards to finalize
    repeated int32 shardIDs = 1;
}

message FinalizeResponse {}

// Finalize needs to be sent from shards or from ordering? Client application that can manually finalize.
