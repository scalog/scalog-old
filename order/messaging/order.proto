syntax = "proto3";

package messaging;

/*
gRPC for Order layer of Scalog
*/
service Order {
    rpc Report(stream ReportRequest) returns (stream ReportResponse) {}

    rpc Register(RegisterRequest) returns (RegisterResponse) {}

    rpc Finalize(FinalizeRequest) returns (FinalizeResponse) {}
}

message Cut {
    // Array of len numReplicas 
    repeated int32 cut = 1;
}

message ShardView {
    // Key: ReplicaID, Value: replica cuts
    map<int32, Cut> replicas = 1;
}

message ReportRequest {
    // Key: ShardID, Value: Shard cuts
    map<int32, ShardView> shards = 1;    
    // Non-nil only if the ordering layer wishes to propose a finalization these particular shards after k cuts
    map<int32, int32> finalize = 2;
    // True if this should be forwarded to the leader
    bool forward = 3;
}

message ReportResponse {
    // Key: ShardID, Value: Commited cuts
    map<int32, Cut> commitedCuts = 1;
    // GSN to start computing at
    int32 startGSN = 2;
    // Array of shards that have been finalized in this batch
    repeated int32 finalize = 3;
}

message RegisterRequest {
    int32 shardID = 1;
    int32 replicaID = 2;
}

message RegisterResponse {}

message FinalizeRequest {
    // Array of shards to finalize after k cuts
    map<int32, int32> shards = 1;
}

message FinalizeResponse {}

// Finalize needs to be sent from shards or from ordering? Client application that can manually finalize.
