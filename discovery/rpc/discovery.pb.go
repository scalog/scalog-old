// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/discovery.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DiscoverRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoverRequest) Reset()         { *m = DiscoverRequest{} }
func (m *DiscoverRequest) String() string { return proto.CompactTextString(m) }
func (*DiscoverRequest) ProtoMessage()    {}
func (*DiscoverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f4ce35571f0997e, []int{0}
}

func (m *DiscoverRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverRequest.Unmarshal(m, b)
}
func (m *DiscoverRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverRequest.Marshal(b, m, deterministic)
}
func (m *DiscoverRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverRequest.Merge(m, src)
}
func (m *DiscoverRequest) XXX_Size() int {
	return xxx_messageInfo_DiscoverRequest.Size(m)
}
func (m *DiscoverRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverRequest proto.InternalMessageInfo

type DiscoverResponse struct {
	Servers              []*DataServerAddress `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DiscoverResponse) Reset()         { *m = DiscoverResponse{} }
func (m *DiscoverResponse) String() string { return proto.CompactTextString(m) }
func (*DiscoverResponse) ProtoMessage()    {}
func (*DiscoverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f4ce35571f0997e, []int{1}
}

func (m *DiscoverResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverResponse.Unmarshal(m, b)
}
func (m *DiscoverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverResponse.Marshal(b, m, deterministic)
}
func (m *DiscoverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverResponse.Merge(m, src)
}
func (m *DiscoverResponse) XXX_Size() int {
	return xxx_messageInfo_DiscoverResponse.Size(m)
}
func (m *DiscoverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverResponse proto.InternalMessageInfo

func (m *DiscoverResponse) GetServers() []*DataServerAddress {
	if m != nil {
		return m.Servers
	}
	return nil
}

type DataServerAddress struct {
	Port                 int32    `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataServerAddress) Reset()         { *m = DataServerAddress{} }
func (m *DataServerAddress) String() string { return proto.CompactTextString(m) }
func (*DataServerAddress) ProtoMessage()    {}
func (*DataServerAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f4ce35571f0997e, []int{2}
}

func (m *DataServerAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataServerAddress.Unmarshal(m, b)
}
func (m *DataServerAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataServerAddress.Marshal(b, m, deterministic)
}
func (m *DataServerAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataServerAddress.Merge(m, src)
}
func (m *DataServerAddress) XXX_Size() int {
	return xxx_messageInfo_DataServerAddress.Size(m)
}
func (m *DataServerAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_DataServerAddress.DiscardUnknown(m)
}

var xxx_messageInfo_DataServerAddress proto.InternalMessageInfo

func (m *DataServerAddress) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *DataServerAddress) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func init() {
	proto.RegisterType((*DiscoverRequest)(nil), "rpc.DiscoverRequest")
	proto.RegisterType((*DiscoverResponse)(nil), "rpc.DiscoverResponse")
	proto.RegisterType((*DataServerAddress)(nil), "rpc.DataServerAddress")
}

func init() { proto.RegisterFile("rpc/discovery.proto", fileDescriptor_4f4ce35571f0997e) }

var fileDescriptor_4f4ce35571f0997e = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x2a, 0x48, 0xd6,
	0x4f, 0xc9, 0x2c, 0x4e, 0xce, 0x2f, 0x4b, 0x2d, 0xaa, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x2e, 0x2a, 0x48, 0x56, 0x12, 0xe4, 0xe2, 0x77, 0x81, 0x8a, 0x07, 0xa5, 0x16, 0x96, 0xa6,
	0x16, 0x97, 0x28, 0xb9, 0x70, 0x09, 0x20, 0x84, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x0c,
	0xb8, 0xd8, 0x8b, 0x53, 0x8b, 0xca, 0x52, 0x8b, 0x8a, 0x25, 0x18, 0x15, 0x98, 0x35, 0xb8, 0x8d,
	0xc4, 0xf4, 0x8a, 0x0a, 0x92, 0xf5, 0x5c, 0x12, 0x4b, 0x12, 0x83, 0xc1, 0xe2, 0x8e, 0x29, 0x29,
	0x45, 0xa9, 0xc5, 0xc5, 0x41, 0x30, 0x65, 0x4a, 0xe6, 0x5c, 0x82, 0x18, 0xb2, 0x42, 0x42, 0x5c,
	0x2c, 0x05, 0xf9, 0x45, 0x25, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x60, 0xb6, 0x10, 0x1f,
	0x17, 0x53, 0x66, 0x81, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x53, 0x66, 0x81, 0x91, 0x2f,
	0x17, 0x27, 0xcc, 0xfa, 0x4a, 0x21, 0x07, 0x84, 0xf3, 0x20, 0x26, 0x15, 0x0b, 0x89, 0x40, 0x6c,
	0x46, 0x75, 0xb4, 0x94, 0x28, 0x9a, 0x28, 0xc4, 0xdd, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0xcf, 0x1a,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa4, 0xd6, 0xb2, 0x2e, 0x03, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiscoveryClient is the client API for Discovery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiscoveryClient interface {
	DiscoverServers(ctx context.Context, in *DiscoverRequest, opts ...grpc.CallOption) (*DiscoverResponse, error)
}

type discoveryClient struct {
	cc *grpc.ClientConn
}

func NewDiscoveryClient(cc *grpc.ClientConn) DiscoveryClient {
	return &discoveryClient{cc}
}

func (c *discoveryClient) DiscoverServers(ctx context.Context, in *DiscoverRequest, opts ...grpc.CallOption) (*DiscoverResponse, error) {
	out := new(DiscoverResponse)
	err := c.cc.Invoke(ctx, "/rpc.Discovery/DiscoverServers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscoveryServer is the server API for Discovery service.
type DiscoveryServer interface {
	DiscoverServers(context.Context, *DiscoverRequest) (*DiscoverResponse, error)
}

func RegisterDiscoveryServer(s *grpc.Server, srv DiscoveryServer) {
	s.RegisterService(&_Discovery_serviceDesc, srv)
}

func _Discovery_DiscoverServers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscoverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoveryServer).DiscoverServers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Discovery/DiscoverServers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoveryServer).DiscoverServers(ctx, req.(*DiscoverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Discovery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Discovery",
	HandlerType: (*DiscoveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DiscoverServers",
			Handler:    _Discovery_DiscoverServers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/discovery.proto",
}
