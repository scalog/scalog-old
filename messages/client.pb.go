// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client.proto

package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Client_RequestType int32

const (
	Client_ACK Client_RequestType = 0
)

var Client_RequestType_name = map[int32]string{
	0: "ACK",
}
var Client_RequestType_value = map[string]int32{
	"ACK": 0,
}

func (x Client_RequestType) String() string {
	return proto.EnumName(Client_RequestType_name, int32(x))
}
func (Client_RequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_client_f27915b136151cb8, []int{0, 0}
}

type Client struct {
	RequestType          Client_RequestType `protobuf:"varint,1,opt,name=request_type,json=requestType,proto3,enum=messages.Client_RequestType" json:"request_type,omitempty"`
	Cid                  int32              `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	Csn                  int32              `protobuf:"varint,3,opt,name=csn,proto3" json:"csn,omitempty"`
	GlobalSequenceNumber int32              `protobuf:"varint,4,opt,name=global_sequence_number,json=globalSequenceNumber,proto3" json:"global_sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Client) Reset()         { *m = Client{} }
func (m *Client) String() string { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()    {}
func (*Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_client_f27915b136151cb8, []int{0}
}
func (m *Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Client.Unmarshal(m, b)
}
func (m *Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Client.Marshal(b, m, deterministic)
}
func (dst *Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Client.Merge(dst, src)
}
func (m *Client) XXX_Size() int {
	return xxx_messageInfo_Client.Size(m)
}
func (m *Client) XXX_DiscardUnknown() {
	xxx_messageInfo_Client.DiscardUnknown(m)
}

var xxx_messageInfo_Client proto.InternalMessageInfo

func (m *Client) GetRequestType() Client_RequestType {
	if m != nil {
		return m.RequestType
	}
	return Client_ACK
}

func (m *Client) GetCid() int32 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *Client) GetCsn() int32 {
	if m != nil {
		return m.Csn
	}
	return 0
}

func (m *Client) GetGlobalSequenceNumber() int32 {
	if m != nil {
		return m.GlobalSequenceNumber
	}
	return 0
}

func init() {
	proto.RegisterType((*Client)(nil), "messages.Client")
	proto.RegisterEnum("messages.Client_RequestType", Client_RequestType_name, Client_RequestType_value)
}

func init() { proto.RegisterFile("client.proto", fileDescriptor_client_f27915b136151cb8) }

var fileDescriptor_client_f27915b136151cb8 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xc9, 0x4c,
	0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xc8, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c,
	0x4f, 0x2d, 0x56, 0xda, 0xcd, 0xc8, 0xc5, 0xe6, 0x0c, 0x96, 0x12, 0xb2, 0xe7, 0xe2, 0x29, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x89, 0x2f, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0,
	0x33, 0x92, 0xd1, 0x83, 0xa9, 0xd5, 0x83, 0xa8, 0xd3, 0x0b, 0x82, 0x28, 0x0a, 0xa9, 0x2c, 0x48,
	0x0d, 0xe2, 0x2e, 0x42, 0x70, 0x84, 0x04, 0xb8, 0x98, 0x93, 0x33, 0x53, 0x24, 0x98, 0x14, 0x18,
	0x35, 0x58, 0x83, 0x40, 0x4c, 0xb0, 0x48, 0x71, 0x9e, 0x04, 0x33, 0x54, 0xa4, 0x38, 0x4f, 0xc8,
	0x84, 0x4b, 0x2c, 0x3d, 0x27, 0x3f, 0x29, 0x31, 0x27, 0xbe, 0x18, 0xa4, 0x33, 0x2f, 0x39, 0x35,
	0x3e, 0xaf, 0x34, 0x37, 0x29, 0xb5, 0x48, 0x82, 0x05, 0xac, 0x48, 0x04, 0x22, 0x1b, 0x0c, 0x95,
	0xf4, 0x03, 0xcb, 0x29, 0x89, 0x71, 0x71, 0x23, 0xd9, 0x2a, 0xc4, 0xce, 0xc5, 0xec, 0xe8, 0xec,
	0x2d, 0xc0, 0x90, 0xc4, 0x06, 0xf6, 0x8e, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xee, 0x13, 0xe1,
	0x93, 0xde, 0x00, 0x00, 0x00,
}
